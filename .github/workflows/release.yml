name: Release

on:
  push:
    branches: [main]

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release via Changesets
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"
          always-auth: true

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check for circular dependencies
        run: bun run check-circular

      - name: Type check
        run: bun run typecheck

      - name: Lint
        run: bun run lint

      - name: Build all packages
        run: bun run build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: bun run ci:version
          commit: "Version and publish packages"
          title: "Version and publish packages"
          createGithubReleases: true
          publish: bun run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}

  snapshot:
    name: Publish snapshot
    runs-on: ubuntu-latest
    # Run on main (when NOT a version commit)
    if: |
      (github.ref == 'refs/heads/main' && !startsWith(github.event.head_commit.message, 'Version and publish packages'))
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"
          always-auth: true

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build all packages
        run: bun run build

      - name: Create snapshot versions
        run: |
          bun changeset version --snapshot
          bun update

      - name: Publish snapshot to npm
        run: bun run release
        env:
          SNAPSHOT: true
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
