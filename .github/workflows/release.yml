name: Release

on:
  push:
    branches: [main]

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  # Check and build library packages (types, core, server)
  build-libs:
    name: Build library packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check for circular dependencies
        run: bun run check-circular

      - name: Type check
        run: bun run typecheck

      - name: Lint
        run: bun run lint

      - name: Build library packages
        run: |
          bun run --filter @fiberplane/mcp-gateway-types build
          bun run --filter @fiberplane/mcp-gateway-core build
          bun run --filter @fiberplane/mcp-gateway-server build

  # Build CLI source package
  build-cli:
    name: Build CLI package
    runs-on: ubuntu-latest
    needs: build-libs
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build CLI package
        run: bun run --filter @fiberplane/mcp-gateway-cli build

  # Build platform-specific binaries
  build-binaries:
    name: Build ${{ matrix.platform }} binary
    needs: build-cli
    strategy:
      matrix:
        include:
          - platform: linux-x64
            os: ubuntu-latest
          - platform: darwin-arm64
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile --verbose

      - name: Build binary for ${{ matrix.platform }}
        run: bun run build:binaries

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.platform }}
          path: packages/mcp-gateway-${{ matrix.platform }}/
          retention-days: 1

  # Create version PR or publish normal release
  release:
    name: Release via Changesets
    needs: build-binaries
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"
          always-auth: true

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Download all binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: packages/

      - name: Restore binary artifacts to correct locations
        run: |
          mv packages/binary-linux-x64/* packages/mcp-gateway-linux-x64/
          mv packages/binary-darwin-arm64/* packages/mcp-gateway-darwin-arm64/
          rm -rf packages/binary-*

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: bun run ci:version
          commit: "Version and publish packages"
          title: "Version and publish packages"
          createGithubReleases: true
          publish: bun run ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Publish snapshot releases
  snapshot:
    name: Publish snapshot
    needs: build-binaries
    runs-on: ubuntu-latest
    # Run on main (when NOT a version commit) or refactor branch
    if: |
      (github.ref == 'refs/heads/main' && !startsWith(github.event.head_commit.message, 'Version and publish packages'))
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"
          always-auth: true

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Download all binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: packages/

      - name: Restore binary artifacts to correct locations
        run: |
          mv packages/binary-linux-x64/* packages/mcp-gateway-linux-x64/
          mv packages/binary-darwin-arm64/* packages/mcp-gateway-darwin-arm64/
          rm -rf packages/binary-*

      - name: Create snapshot versions
        run: |
          bun changeset version --snapshot
          bun update

      - name: Publish snapshot to npm
        run: bun run ci:publish
        env:
          SNAPSHOT: true
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
